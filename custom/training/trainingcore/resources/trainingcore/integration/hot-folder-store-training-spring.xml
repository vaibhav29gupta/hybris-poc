<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration
		http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/file
		http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
		
    <context:annotation-config/> 

	<bean id="baseDirectoryElectronics" class="java.lang.String">
		<constructor-arg value="#{baseDirectory}/${tenantId}/training" />
	</bean>
	<!-- 1) Scan for files -->
	<file:inbound-channel-adapter id="batchFilesElectronics" directory="#{baseDirectoryElectronics}"
		filename-regex="^(.*)-(\d+)\.csv" comparator="fileOrderComparator">
		<int:poller fixed-rate="1000" />
	</file:inbound-channel-adapter>

	<!-- 2) move the file to processing and setup header -->
	<file:outbound-gateway request-channel="batchFilesElectronics" reply-channel="batchFilesElectronicsProc"
		directory="#{baseDirectoryElectronics}/processing" delete-source-files="true" />
	<int:service-activator input-channel="batchFilesElectronicsProc" output-channel="batchFilesHeaderInit"
		ref="trainingHeaderSetupTask" method="execute" />
	<bean id="trainingHeaderSetupTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
		<property name="catalog" value="electronicsProductCatalog" />
		<property name="net" value="false" />
		<property name="storeBaseDirectory" ref="baseDirectoryElectronics" />
	</bean>

	<!-- <bean id="trainingProductConverterMapping" 
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping" 
		  p:mapping="product" 
		  p:converter-ref="trainingProductConverter">
	</bean> -->	  
		  
	<!-- <bean id="productImpexHeader" class="java.lang.String">
		<constructor-arg>
			<value> #Impex for importing data into catalog
			$version=Staged
			$productCatalog=electronicsProductCatalog
			$catalogVersion(CatalogVersion.catalog(Catalog.id[default=$productCatalog]),CatalogVersion.version[default=$version])[default=$contentCatalog:$version]			
			$lang=en
			$approved=approvalstatus(code)[default='approved']
			</value>
		</constructor-arg>
	</bean>		  
		  
	<bean id="trainingProductConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{productImpexHeader}
				INSERT_UPDATE Product;code[unique=true];[lang=$lang];ean;manufacturerName;manufacturerAID;$approved;$catalogVersion
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{1};{2};{3};{4}</value>
		</property>
	</bean> -->
	  
</beans>
